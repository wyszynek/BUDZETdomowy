@model HomeBudget.Models.Notepad

@{
    ViewData["Title"] = "Create new note";
}

<h1>Create</h1>

<h1 class="display-4">Note</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <!-- Zmiana pola opisu na pole tekstowe (textarea) -->
                <textarea asp-for="Description" class="form-control" rows="5" onkeydown="handleEnter(event)"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <p></p>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Obsługa wciśnięcia klawisza Enter w polu opisu
        function handleEnter(e) {
            if (e.keyCode == 13 && !e.shiftKey) {
                e.preventDefault();
                var textarea = e.target;
                var start = textarea.selectionStart;
                var end = textarea.selectionEnd;
                textarea.value = textarea.value.substring(0, start) + "\n" + textarea.value.substring(end);
                textarea.selectionStart = textarea.selectionEnd = start + 1;
            }
        }
    </script>
}
