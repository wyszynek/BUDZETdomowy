@model IEnumerable<HomeBudget.Models.Transaction>

@{
    ViewData["Title"] = "Transactions";
}

<!--ladujemy biblioteke stylizacji-->
<link href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" rel="stylesheet">

<h1>Transactions</h1>

<div class="text-center">
    <form method="post" asp-controller="Transaction" asp-action="ExportToCSV">
        <button type="submit" class="btn btn-primary">Export data to CSV</button>
    </form>
</div>

<p></p>

<div class="text-center">
    <form method="post" asp-controller="Transaction" asp-action="ExportToExcel">
        <button type="submit" class="btn btn-primary">Export data to Excel</button>
    </form>
</div>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>

<table class="table" id="transactionsTable">
    <thead>
        <tr>
            <th>
                Category
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Account)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Currency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Note)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderBy(item => item.Category.CategoryName))
        {
            <tr>
                <td>
                    <div>
                        <span>@Html.Raw(item.Category.Icon)</span>
                        @Html.DisplayFor(modelItem => item.Category.CategoryName)
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Account.AccountName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Currency.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!--uzywamy jQuery (biblioteka JavaScript od manipulacji HTML) aby poczekac na zaladowanie dokumentu i nastepnie wywolac funkcje datatable na identyfikatorze 'transactionsTable'-->
@section Scripts {
    <!--ladujemy biblioteke ktora dostarcza funkcji do interakcji z tabela-->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#transactionsTable').DataTable();
        });
    </script>
}
